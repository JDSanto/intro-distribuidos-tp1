#!/usr/bin/python3

import logging
import os

from lib import utils
from lib.gbn import GBNSocket
from lib.metadata import Metadata
from lib.stopandwait import SaWSocket
from lib.tcpsocket import TCPSocket
from lib.udpsocket import UDPSocket


def download_file(socket, filename, dest_folder, logger):
    if not os.path.isdir(dest_folder):
        logger.info(f"Creating destination folder: {dest_folder}")
        os.makedirs(dest_folder)

    metadata = Metadata(utils.Command.DOWNLOAD.value, filename, 0)

    # Send the command to the server
    logger.info("Sending metadata for DOWNLOAD command")
    socket.send_data(bytes(metadata))

    file_size = int.from_bytes(socket.receive_data(utils.INT_SIZE), "big")

    # Receive the file
    logger.info("Downloading file")
    with open(os.path.join(dest_folder, filename), "wb") as f:
        while file_size > 0:
            data = socket.receive_data(min(utils.MSG_SIZE, file_size))
            f.write(data)
            file_size -= len(data)

    logger.info("File downloaded")

    socket.send_data(utils.Status.OK.value)

    socket.send_data(utils.Command.SHUTDOWN.value)

    socket.close()


if __name__ == "__main__":

    args = utils.parse_download_file()
    GREEN = "\033[1;32m"
    NC = "\033[0m"
    logging.basicConfig(
        level=args.verbose,
        format=f"%(asctime)s - [{GREEN}download{NC} %(levelname)s] - %(message)s",
        datefmt="%Y/%m/%d %H:%M:%S",
    )
    logger = logging.getLogger(__name__)

    if args.protocol == utils.Protocol.TCP:
        client = TCPSocket.connect("localhost", args.port, logger)
        logger.info("Starting File Transfer App with TCP...")
    elif args.protocol == utils.Protocol.UDP:
        client = UDPSocket.connect("localhost", args.port, logger)
        logger.info("Starting File Transfer App with UDP...")
    elif args.protocol == utils.Protocol.SAW:
        client = SaWSocket.connect("localhost", args.port, logger)
        logger.info("Starting File Transfer App with UDP+SaW...")
    elif args.protocol == utils.Protocol.GBN:
        client = GBNSocket.connect("localhost", args.port, logger)
        logger.info("Starting File Transfer App with UDP+GBN...")

    download_file(client, args.filename, args.dst, logger)
    logger.info("File transfer complete")
