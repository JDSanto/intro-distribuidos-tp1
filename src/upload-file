#!/usr/bin/python3
import logging
import os

from lib import utils
from lib.gbn import GBNSocket
from lib.metadata import Metadata
from lib.stopandwait import SaWSocket
from lib.tcpsocket import TCPSocket
from lib.udpsocket import UDPSocket


def upload_file(socket, filename, filedir, logger):
    filepath = os.path.join(filedir, filename)
    if not os.path.isfile(filepath):
        logger.error(f"The file {filepath} does not exist")
        return

    file_size = os.path.getsize(filepath)

    metadata = Metadata(utils.Command.UPLOAD.value, filename, file_size)

    # Send the command to the server
    logger.info("Sending metadata for UPLOAD command")
    socket.send_data(bytes(metadata))

    # Send the file
    logger.info("Sending file")
    with open(filepath, "rb") as f:
        while file_size > 0:
            msg_size = min(utils.MSG_SIZE, file_size)
            data = f.read(msg_size)
            socket.send_data(data)
            file_size -= len(data)

    logger.info("Waiting for server response")
    response = socket.receive_data(1)
    if response == utils.Status.ERROR.value:
        logger.error("File transfer failed")
    else:
        logger.info("File uploaded")

    socket.send_data(utils.Command.SHUTDOWN.value)

    socket.close()


if __name__ == "__main__":

    args = utils.parse_upload_file()
    BLUE = "\033[94m"
    NC = "\033[0m"
    logging.basicConfig(
        level=args.verbose,
        format=f"%(asctime)s - [{BLUE}upload{NC} %(levelname)s] - %(message)s",
        datefmt="%Y/%m/%d %H:%M:%S",
    )
    logger = logging.getLogger(__name__)

    if args.protocol == utils.Protocol.TCP:
        client = TCPSocket.connect("localhost", args.port, logger)
        logger.info("Starting File Transfer App with TCP...")
    elif args.protocol == utils.Protocol.UDP:
        client = UDPSocket.connect("localhost", args.port, logger)
        logger.info("Starting File Transfer App with UDP...")
    elif args.protocol == utils.Protocol.SAW:
        client = SaWSocket.connect("localhost", args.port, logger)
        logger.info("Starting File Transfer App with UDP+SaW...")
    elif args.protocol == utils.Protocol.GBN:
        client = GBNSocket.connect("localhost", args.port, logger)
        logger.info("Starting File Transfer App with UDP+GBN...")

    upload_file(client, args.filename, args.src, logger)

    logger.info("File transfer complete")
